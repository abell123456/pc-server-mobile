'use strict';

module.exports = function (config) {
    // Load dependencies.
    var http = require('http');
    var https = require('@ali/easy-https');
    var tianma = require('tianma');
    var routeBuild = require('../lib/route-build');
    var routeProxy = require('../lib/route-proxy');

    // Initiate config.
    var port = config.port;
    var portssl = config.portssl;
    var root = config.root || './';
    var scope = config.system === 'bower' ?
        '' : '@alife';
    var moduledir = config.system === 'bower' ?
        'bower_components' : 'node_modules';

    // Config the pipeline.
    var app = tianma();

    app
        .use(function *(next) {
            yield next;
            this.response
                .head('access-control-allow-origin', '*')
                .head('cache-control', 'no-cache, no-store, must-revalidate')
                .head('pragma', 'no-cache');
        })
        .combo()
        .mount('i.alicdn.com').then
            .use(routeProxy(root)).then
                .cache()
                .rewrite({
                    'http://i.alicdn.com@110.75.115.8$1': /^(.*)/
                })
                .end
            .rewrite({
                '$1$2$3': /^(.*)(?:\.[0-9a-f]{8})(\.\w+)(\??.*)$/,
                '$1$2': /^(.*)(?:[0-9a-f]{14}\/)(.*)$/
            })
            .use(routeBuild(root)).then
                .static(root)
                .end
            .end
        .mount('/').then
            .seaclean()
            .bundle()
            .modular({
                root: root,
                scope: scope,
                moduledir: moduledir
            })
            .markdown({
                magic: true,
                theme: 'http://apollo.alif2e.com/assets/css/demo.css'
            })
            .debug()
            .syntaxCheck()
            .static(root)
            .end;

    // Create server.
    if (port) {
        http.createServer(app.run).listen(port);
        console.log('[i] Listen to http://127.0.0.1:%s ..', port);
    }

    if (portssl) {
        https.createServer(app.run).listen(portssl);
        console.log('[i] Listen to https://127.0.0.1:%s ..', portssl);
    }

    console.log('[i] To stop service, press [Ctrl + C] ..');
};
